{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","utils/fetchClient.ts","components/PostDetails.tsx","api/posts.ts","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPost","setSelectedPost","setVisibleForm","handlePostSelect","post","className","map","id","title","type","onClick","Loader","NewCommentForm","addNewComment","isCommentSubmiting","useState","userName","setUserName","hasUserNameError","setHasUserNameError","email","setEmail","hasEmailError","setHasEmailError","body","setBody","hasBodyError","setHasBodyError","onSubmit","ev","preventDefault","trim","newComment","postId","name","handleFormSubmit","htmlFor","placeholder","cn","value","onChange","target","mail","text","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","JSON","stringify","headers","then","fetch","response","json","client","PostDetails","visibleForm","comments","setComments","isLoading","setIsLoading","error","setError","errorMessage","setErrorMessage","setIsCommentSubmiting","useEffect","catch","finally","onDelete","current","filter","c","deleteComment","length","comment","href","addComment","currentComments","UserSelector","users","selectedUser","setSelectedUser","visibleDropdown","setVisibleDropdown","role","user","handleUserSelect","App","setUsers","setPosts","classNames","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78c719fa.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  posts: Post[],\n  selectedPost: Post | null,\n  setSelectedPost: (p: Post | null) => void,\n  setVisibleForm: (f: boolean) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPost,\n  setSelectedPost,\n  setVisibleForm,\n}) => {\n  const handlePostSelect = (post: Post | null) => {\n    setVisibleForm(false);\n    setSelectedPost(post);\n  };\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <tr data-cy=\"Post\" key={post.id}>\n              <td data-cy=\"PostId\">{post.id}</td>\n\n              <td data-cy=\"PostTitle\">\n                {post.title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                {selectedPost?.id === post.id\n                  ? (\n                    <button\n                      type=\"button\"\n                      data-cy=\"PostButton\"\n                      className=\"button is-link\"\n                      onClick={() => handlePostSelect(null)}\n                    >\n                      Close\n                    </button>\n                  ) : (\n                    <button\n                      type=\"button\"\n                      data-cy=\"PostButton\"\n                      className=\"button is-link is-light\"\n                      onClick={() => handlePostSelect(post)}\n                    >\n                      Open\n                    </button>\n                  )}\n\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport React, { useState } from 'react';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\n\ntype Props = {\n  post: Post,\n  addNewComment: (c: Omit<Comment, 'id'>) => void,\n  isCommentSubmiting: boolean,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  post,\n  addNewComment,\n  isCommentSubmiting,\n}) => {\n  const [userName, setUserName] = useState('');\n  const [hasUserNameError, setHasUserNameError] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [hasEmailError, setHasEmailError] = useState(false);\n\n  const [body, setBody] = useState('');\n  const [hasBodyError, setHasBodyError] = useState(false);\n\n  const handleUserNameChange = (name: string) => {\n    setHasUserNameError(false);\n    setUserName(name);\n  };\n\n  const handleEmailChange = (mail: string) => {\n    setHasEmailError(false);\n    setEmail(mail);\n  };\n\n  const handleBodyChange = (text: string) => {\n    setHasBodyError(false);\n    setBody(text);\n  };\n\n  const handleFormSubmit = (ev: React.FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    setHasUserNameError(!userName.trim());\n    setHasEmailError(!email.trim());\n    setHasBodyError(!body.trim());\n\n    if (!userName.trim() || !email.trim() || !body.trim()) {\n      return;\n    }\n\n    const newComment = {\n      postId: post.id,\n      name: userName,\n      email,\n      body,\n    };\n\n    addNewComment(newComment);\n    setBody('');\n  };\n\n  const reset = () => {\n    setUserName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={(ev) => handleFormSubmit(ev)}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={cn('input', { 'is-danger': hasUserNameError })}\n            value={userName}\n            onChange={(ev) => handleUserNameChange(ev.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {hasUserNameError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasUserNameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={cn('input', { 'is-danger': hasEmailError })}\n            value={email}\n            onChange={(ev) => handleEmailChange(ev.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {hasEmailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasEmailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={cn('textarea', { 'is-danger': hasBodyError })}\n            value={body}\n            onChange={(ev) => handleBodyChange(ev.target.value)}\n          />\n        </div>\n\n        {hasBodyError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={cn('button is-link',\n              { 'is-loading': isCommentSubmiting })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={reset}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport { addComment, deleteComment, getComments } from '../api/posts';\n\ntype Props = {\n  post: Post,\n  visibleForm: boolean,\n  setVisibleForm: (f: boolean) => void,\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  post,\n  visibleForm,\n  setVisibleForm,\n}) => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isCommentSubmiting, setIsCommentSubmiting] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n\n    getComments(post.id).then(setComments)\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, [post]);\n\n  const addNewComment = ({\n    postId, name, email, body,\n  }: Omit<Comment, 'id'>) => {\n    setIsCommentSubmiting(true);\n\n    addComment({\n      postId, name, email, body,\n    })\n      .then((c) => {\n        setComments(currentComments => [...currentComments, c]);\n      })\n      .catch(() => {\n        setErrorMessage('Unable to add a comment');\n        setTimeout(() => {\n          setErrorMessage('');\n        }, 5000);\n      })\n      .finally(() => setIsCommentSubmiting(false));\n  };\n\n  const onDelete = (id: number) => {\n    setComments(current => current.filter(c => c.id !== id));\n\n    deleteComment(id).then()\n      .catch(() => {\n        setErrorMessage('Unable to delete a comment');\n        setTimeout(() => {\n          setErrorMessage('');\n        }, 5000);\n      });\n  };\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${post.id}: ${post.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )}\n\n          {!isLoading && (comments?.length\n            ? (\n              <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n                No comments yet\n              </p>\n            ) : (\n              <p className=\"title is-4\">Comments:</p>\n            ))}\n\n          {!isLoading && comments?.map(comment => (\n            <article\n              className=\"message is-small\"\n              data-cy=\"Comment\"\n              key={comment.id}\n            >\n              <div className=\"message-header\">\n                <a href={`mailto:${comment.email}`} data-cy=\"CommentAuthor\">\n                  {comment.name}\n                </a>\n                <button\n                  data-cy=\"CommentDelete\"\n                  type=\"button\"\n                  className=\"delete is-small\"\n                  aria-label=\"delete\"\n                  onClick={() => onDelete(comment.id)}\n                >\n                  delete button\n                </button>\n              </div>\n\n              <div className=\"message-body\" data-cy=\"CommentBody\">\n                {comment.body}\n              </div>\n            </article>\n          ))}\n\n          {!visibleForm && !isLoading && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setVisibleForm(true)}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {visibleForm && (\n          <NewCommentForm\n            post={post}\n            addNewComment={addNewComment}\n            isCommentSubmiting={isCommentSubmiting}\n          />\n        )}\n      </div>\n\n      {errorMessage && (\n        <div className=\"notification is-danger is-light\">\n          <strong>{errorMessage}</strong>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Comment } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getPosts = (id: number | undefined) => {\n  return client.get<Post[]>(`/posts?userId=${id}`);\n};\n\nexport const getComments = (postId: number) => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const deleteComment = (id: number) => {\n  return client.delete(`/comments/${id}`);\n};\n\nexport const addComment = ({\n  postId, name, email, body,\n}: Omit<Comment, 'id'>) => {\n  return client.post<Comment>('/comments', {\n    postId, name, email, body,\n  });\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { User } from '../types/User';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  users: User[],\n  setSelectedUser: (u: User) => void,\n  selectedUser: User | null,\n  setSelectedPost: (p: Post | null) => void,\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  users,\n  selectedUser,\n  setSelectedUser,\n  setSelectedPost,\n}) => {\n  const [visibleDropdown, setVisibleDropdown] = useState(false);\n\n  const handleUserSelect = (user: User) => {\n    setSelectedUser(user);\n    setVisibleDropdown(false);\n    setSelectedPost(null);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={cn('dropdown', { 'is-active': visibleDropdown })}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setVisibleDropdown(true)}\n        >\n          <span>\n            {!selectedUser\n              ? 'Choose a user'\n              : selectedUser.name}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {users.map(user => (\n            <a\n              key={user.id}\n              href={`#user-${user.id}`}\n              className={cn('dropdown-item',\n                { 'is-active': selectedUser?.id === user.id })}\n              onClick={() => handleUserSelect(user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { getPosts, getUsers } from './api/posts';\nimport { Post } from './types/Post';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [posts, setPosts] = useState<Post[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [visibleForm, setVisibleForm] = useState(false);\n\n  useEffect(() => {\n    getUsers().then(setUsers)\n      .catch()\n      .finally();\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n\n    getPosts(selectedUser?.id).then(setPosts)\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, [selectedUser]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  setSelectedUser={setSelectedUser}\n                  selectedUser={selectedUser}\n                  setSelectedPost={setSelectedPost}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {isLoading && <Loader />}\n\n                {error && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {selectedUser && !isLoading && (!posts?.length\n                  ? (\n                    <div\n                      className=\"notification is-warning\"\n                      data-cy=\"NoPostsYet\"\n                    >\n                      No posts yet\n                    </div>\n                  ) : (\n                    <PostsList\n                      posts={posts}\n                      selectedPost={selectedPost}\n                      setSelectedPost={setSelectedPost}\n                      setVisibleForm={setVisibleForm}\n                    />\n                  ))}\n\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': selectedPost },\n            )}\n          >\n\n            {selectedPost && (\n              <div className=\"tile is-child box is-success \">\n                <PostDetails\n                  post={selectedPost}\n                  visibleForm={visibleForm}\n                  setVisibleForm={setVisibleForm}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}